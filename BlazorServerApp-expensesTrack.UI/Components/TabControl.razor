<div class="btn-group" role="group">
    @foreach(TabPage tabPage in Pages)
    {
        <button type="button"
                class=" btn @GetButtonClass(tabPage)"
                @onclick=@(() => ActivatePage(tabPage))>
            
              @if(TabTitle != null)
              {
                @TabTitle(tabPage)
                }
                else
                {
                    @tabPage.Text
                }
        </button>
    }
</div>



<CascadingValue Value="this">
    @ChildContent
</CascadingValue>


@code {

    //parameter will receve each TabPage added to the TabControl
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public RenderFragment<TabPage> TabTitle { get; set; }

  
    //addPade  will seve the reference to the pages
    public TabPage ActivePage { get; set; }

    List<TabPage> Pages = new List<TabPage>();

    internal void AddPage(TabPage tabPage)
    {
        Pages.Add(tabPage);

        if (Pages.Count == 1)
            ActivePage = tabPage;

        StateHasChanged();
    }

    //define the active page
    protected string GetButtonClass(TabPage page)
    {
        return page == ActivePage ? "btn-primary" : "btn-secondary";

    }

    protected void ActivatePage(TabPage page)
    {
        ActivePage = page;
    }
}
