@page "/categories"

@using BlazorExpensesTracker.Model;
@using BlazorServerApp_expensesTrack.UI.Inferfaces;
@inject ICategoryService CategoryService;

<h3>Categories</h3>

<p>@Message</p>

@if (categories == null)
{
    <p> Loading ...</p>
} else
{
    <div>
        <a href="/categorydetails">Add New Category</a>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td>
                        @category.Name
                    </td>
                    <td>
                        <a href="/categorydetails/@category.Id">Edit</a>
                    </td>
                    <td>
                        <a href="/categorydelete/@category.Id">Delete</a>
                    </td>
                </tr>
            }

        </tbody>
    </table>
}



@code {
    public IEnumerable<Category> categories { get; set; }
    public string Message { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            categories = await CategoryService.GetAllCategories();
        }
        catch (Exception ex)
        {

            Message = "Error: "+ex.Message;
        }
    }
}
